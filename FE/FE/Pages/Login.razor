@page "/login"
@using FE.Models


<center>
    <div class="col-8 card">
        <div class="col-12 row">
            <p>&nbsp;</p>
        </div>
        <div class="col-12 row">
            <div class="col-6" style="border-right:groove">
                <img src="/images/users.svg" width="400px" height="400px" />
            </div>
            <div class="col-6" style="border-left:groove">
                <EditForm Model="@user" OnValidSubmit="@ValidateUser">
                    <div>
                        <br /><br /><br /><br /><br />
                    </div>
                    <div>
                        <h3 style="font-weight:bold; color:purple">PlayNet Login</h3>
                    </div>
                    <div>
                        <br />
                    </div>
                    <div class="col-12 row">
                        <input class="form-control col-12" @bind="user.Email" placeholder="Email Address" />
                    </div>
                    <br />
                    <div class="col-12 row">
                        <input type="password" class="form-control col-12" @bind="user.Password" placeholder="Password" />
                    </div>
                    <br />
                    <div class="col-12 row">
                        <span class="col-12"></span>
                        <input type="submit" href="index" class="form-control col-6 btn btn-primary" value="Login" />
                        <a href="/register" class="col-3">Register</a>
                    </div>
                    <br />
                    <div class="col-12 row" style="text-align:left; font-weight:bold">
                        <span class="col-12">@LoginMesssage</span>
                    </div>
                </EditForm>

            </div>
        </div>
        <div class="col-12 row">
            <p>&nbsp;</p>
        </div>
    </div>
</center>


@code{
    private User user;

    public string LoginMesssage { get; set; }

    protected override Task OnInitializedAsync()
    {
        user = new User();
        return base.OnInitializedAsync();
    }

    private async Task<bool> ValidateUser()
    {
        //assume that user is valid
        //call an API

        return await Task.FromResult(true);
    }
}
